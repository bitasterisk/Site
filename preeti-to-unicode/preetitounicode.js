const map = {
    a: 2431,
    A: [2431, 2381],
    b: 2342,
    B: 2328,
    c: 2309,
    C: 2400,
    d: 2350,
    D: [2650,2381],
    e: 2349,
    E: [2349,2381],
    f: 2366,
    F: 2433,
    g: 2344,
    G: [2344,2381],
    h: 2332,
    H: [2332,2381],
    i: [2359, 2381],
    I: [2325,2381,2359,2381],
    j: 2357,
    J: [2357,2381],
    k: 2346,
    K: [2346,2381],
    l: 2367,
    L: 2368,
    M : 58, 
    n: 2354,
    N: [2354,2381],
    o: 2351,
    O: 2311,
    p: 2313,
    P: 2319,
    q: [2340,2381,2352],
    Q: [2340,2381,2340],
    r: 2330,
    R: [2330,2381],
    s: 2325,
    S: [2325,2381],
    t: 2340,
    T : [2340, 2381],
    u: 2327,
    U: [2327, 2381],
    v: 2326,
    V: [2326, 2381],
    w: 2343,
    W: [2343, 2381],
    x: 2361,
    X : [2361, 2361],
    y: 2341,
    Y: [2341, 2381],
    z: 2358,
    Z: [2358, 2381],
    '`' : 2334, 
    '~' : [2334, 2381],
    1 :  [2332, 2381,2334],
    '!' : 2407,
    2 : [2342,2381,2342],
    '@' : 2408,
    3 : 2328,
    '#' : 2409,
    4 :  [2342, 2381, 2343],
    '$' : 2410,
    5: 2331,
    '%' : 2411,
    6 : 2335,
    '^' : 2412,
    7 : 2336,
    '&' : 2413,
    8 : 2337,
    '*' : 2414,
    9 : 2338,
    '(' : 2415,
    0 : [2339, 2381],
    ')' : 2406,
    '-' : 40,
    '_' : 41,
    '=' : 61,
    '+' : 43,
    '\\' : [2381, 2352],
    '|' : 2381,
    '{' : 2371,
    '[' : [2352, 2381],
    ']' : 2375,
    '}' : 2376,
    ';' : 2360,
    ':' : [2360, 2381],
    '\'' : 2369,
    '"' : 2370,
    '<' : 63,
    '.' : 2404,
    '>' : [2358, 2381, 2352],
    '/' : 2352,
    '?' : [2352, 2369]
}

function preetiToUnicode(sentence) {
    let words = sentence.split(" ");
    let translated = '';
    for (i = 0; i < words.length; i++) {
        let arr = [];
        let word = words[i];
        for (j = 0; j < word.length; j++) {
            let mapValue = map[word[j]];
            if (mapValue) {
                if(typeof mapValue == 'number')
                    arr.push(mapValue);
                else{
                    for(k =0; k < mapValue.length; k++)
                        arr.push(mapValue[k]);
                }
            }
        }
        translated = translated + String.fromCharCode.apply(this, arr) + ' ';
    }

    return translated;
}
